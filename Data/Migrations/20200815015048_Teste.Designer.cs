// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200815015048_Teste")]
    partial class Teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Business.Models.Conta.Conta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("OperacaoId");

                    b.Property<float>("Saldo");

                    b.HasKey("Id");

                    b.HasIndex("OperacaoId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("Business.Models.Conta.Operacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Aprovado");

                    b.Property<Guid>("AprovadorId");

                    b.Property<DateTime>("DataOperacao");

                    b.Property<string>("Descricao");

                    b.Property<string>("Natureza");

                    b.Property<Guid>("SolicitanteId");

                    b.Property<string>("Status");

                    b.Property<int>("TipoOperacao");

                    b.Property<float>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Operacoes");
                });

            modelBuilder.Entity("Business.Models.Conta.Conta", b =>
                {
                    b.HasOne("Business.Models.Conta.Operacao", "Operacao")
                        .WithMany()
                        .HasForeignKey("OperacaoId");
                });
#pragma warning restore 612, 618
        }
    }
}
