// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200816033557_teste2")]
    partial class teste2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Business.Models.Conta.ContaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("OperacaoId");

                    b.Property<float>("Saldo");

                    b.HasKey("Id");

                    b.HasIndex("OperacaoId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("Business.Models.Conta.OperacaoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Aprovado");

                    b.Property<Guid>("AprovadorId");

                    b.Property<DateTime>("DataOperacao");

                    b.Property<string>("Descricao");

                    b.Property<string>("Natureza");

                    b.Property<Guid>("SolicitanteId");

                    b.Property<string>("Status");

                    b.Property<int>("TipoOperacao");

                    b.Property<float>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Operacoes");
                });

            modelBuilder.Entity("Business.Models.MembroModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Altura");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Peso");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("Business.Models.ProjetoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AdminId");

                    b.Property<Guid?>("ContaId");

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<Guid?>("MembroId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("ContaId");

                    b.HasIndex("MembroId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("Business.Models.VotacaoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AprovadorId");

                    b.Property<Guid?>("ContaId");

                    b.Property<Guid?>("OperacaoId");

                    b.Property<Guid?>("ProjetoId");

                    b.Property<Guid?>("SolicitanteId");

                    b.Property<int>("VotosNegativos");

                    b.Property<int>("VotosPositivos");

                    b.HasKey("Id");

                    b.HasIndex("AprovadorId");

                    b.HasIndex("ContaId");

                    b.HasIndex("OperacaoId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Votacoes");
                });

            modelBuilder.Entity("Business.Models.Conta.ContaModel", b =>
                {
                    b.HasOne("Business.Models.Conta.OperacaoModel", "Operacao")
                        .WithMany()
                        .HasForeignKey("OperacaoId");
                });

            modelBuilder.Entity("Business.Models.ProjetoModel", b =>
                {
                    b.HasOne("Business.Models.MembroModel", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("Business.Models.Conta.ContaModel", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId");

                    b.HasOne("Business.Models.MembroModel", "Membro")
                        .WithMany()
                        .HasForeignKey("MembroId");
                });

            modelBuilder.Entity("Business.Models.VotacaoModel", b =>
                {
                    b.HasOne("Business.Models.MembroModel", "Aprovador")
                        .WithMany()
                        .HasForeignKey("AprovadorId");

                    b.HasOne("Business.Models.Conta.ContaModel", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId");

                    b.HasOne("Business.Models.Conta.OperacaoModel", "Operacao")
                        .WithMany()
                        .HasForeignKey("OperacaoId");

                    b.HasOne("Business.Models.ProjetoModel", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId");

                    b.HasOne("Business.Models.MembroModel", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId");
                });
#pragma warning restore 612, 618
        }
    }
}
